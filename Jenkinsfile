// Jenkinsfile
pipeline {
    // Ex√©cuter le pipeline sur n'importe quel agent (serveur Jenkins)
    agent any

    // D√©finir les outils Maven et JDK avec les NOMS EXACTS configur√©s dans Jenkins
    tools {
        maven 'M3_HOME'
        jdk 'JDK-21'
    }

    stages {

        // 1. √âtape de Construction (Compilation et Packaging)
        stage('Build') {
            steps {
                echo '‚ñ∂Ô∏è D√©marrage de la construction de l\'application Spring Boot avec Maven...'
                // Clean : Supprime les artefacts pr√©c√©dents
                // Install : Compile, ex√©cute le package et met l'artefact dans le d√©p√¥t local de Maven
                sh 'mvn clean install -DskipTests'
            }
        }

        // 2. √âtape de Test
        stage('Test') {
            steps {
                echo 'üß™ Ex√©cution des tests unitaires et d\'int√©gration...'
                // Ex√©cute la phase 'test' de Maven (n√©cessite que le Build ait r√©ussi)
                sh 'mvn test'
                // Optionnel : Archiver les rapports de tests pour Jenkins (JUnit format)
                // junit '**/target/surefire-reports/TEST-*.xml'
            }
        }

        // 3. √âtape de D√©ploiement
        stage('Deploy') {
            steps {
                echo 'üöÄ D√©ploiement de l\'application sur le serveur...'

                // üõë √âtape 3a: Arr√™ter l'ancienne instance
                // pkill -f : recherche et tue le processus qui contient le nom de l'application JAR.
                // || true : permet √† la commande de ne pas faire √©chouer le pipeline si l'application n'est pas encore d√©marr√©e.
                sh 'pkill -f "Book-Library-Management" || true'

                // üõë √âtape 3b: D√©marrer la nouvelle instance
                // nohup : permet √† l'application de continuer √† rouler apr√®s que la session SSH de Jenkins se ferme.
                // & : lance le processus en arri√®re-plan.
                // target/*.jar : trouve le fichier JAR g√©n√©r√© (ex: Book-Library-Management-0.0.1-SNAPSHOT.jar)
                sh 'nohup java -jar target/*.jar > app.log 2>&1 &'

                echo '‚úÖ Application Book-Library-Management lanc√©e en arri√®re-plan.'

                // Optionnel : Attendre quelques secondes pour s'assurer que l'application d√©marre
                // sh 'sleep 10'
            }
        }
    }
}